apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: worker
spec:
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: oscarvicente/wait-for-it
          command: ["./wait-for-it.sh", "rabbitmq.default.svc.cluster.local:5672"]
        - name: wait-for-mongo 
          image: oscarvicente/wait-for-it
          command: ["./wait-for-it.sh", "mongodb.default.svc.cluster.local:27017"]
      containers:
        - name: worker
          image: oscarvicente/deepscheduler-worker
          env:
            - name: RABBIT_HOST
              value: rabbitmq.default.svc.cluster.local
            - name: REQUEST_QUEUE
              value: request_queue
            - name: MINIO_CLIENT
              value: minio-oscarvx00.cloud.okteto.net
            - name: MINIO_ACCESS
              valueFrom:
                secretKeyRef:
                  name: worker-secret
                  key: MINIO_ACCESS
            - name: MINIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: worker-secret
                  key: MINIO_SECRET
            - name: MINIO_RESULTS_BUCKET
              value: users-results
            - name: MONGO_HOST
              value: mongodb.default.svc.cluster.local
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - mountPath: "/var/run/docker.sock"
              name: dockersock
            - mountPath: "/etc/machine-id"
              name: machine-id
          securityContext:
            privileged: true

      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: machine-id
          hostPath:
            path: "/etc/machine-id"
      nodeSelector:
        gpu-node: "true"
